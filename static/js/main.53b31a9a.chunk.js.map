{"version":3,"sources":["assets/hamburger.svg","reducers/index.js","reducers/breweriesReducer.js","reducers/currentPageReducer.js","reducers/foodTrucksReducer.js","reducers/userEventsReducer.js","reducers/userReducer.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","actions/index.js","utilities/index.js","containers/Login/index.js","components/SignUpPage/index.js","components/BusinessContainer/index.js","containers/ProfilePage/index.js","tests/testMocks.js","containers/NavBar/index.js","containers/App/index.js","serviceWorker.js","index.js","assets/food-truck.png","assets/barrel-icon-new.png"],"names":["module","exports","__webpack_require__","p","rootReducer","combineReducers","breweries","state","arguments","length","undefined","action","type","currentPage","foodTrucks","userEvents","events","concat","Object","toConsumableArray","event","filter","id","map","objectSpread","user","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","app","initializeApp","loadProfile","addUser","fetchBusinesses","_ref","asyncToGenerator","regenerator_default","mark","_callee","businessType","response","result","wrap","_context","prev","next","fetch","sent","ok","Error","statusText","json","abrupt","t0","message","stop","_x","apply","loginUser","_ref2","_callee2","eventResults","newResult","_context2","method","headers","Content-Type","body","JSON","stringify","getUserEvents","_x2","_ref3","_callee3","cleanedUser","_context3","cleanUser","eventType","_x3","data","createNewUser","_ref4","_callee4","locationType","_context4","_x4","_x5","createEventFetch","_ref5","_callee5","postBody","_context5","_x6","_x7","toggleEventStatus","_ref6","_callee6","business","cleanedBusiness","cleanedEvent","_context6","cleanEventForPut","_x8","_x9","date","attributes","booked?","uid","sessionStorage","getItem","truck_booked?","deleteEventFetch","_ref7","_callee7","_context7","console","log","_x10","_x11","Login","_Component","possibleConstructorReturn","getPrototypeOf","call","handleKeyPress","_event$target","target","name","value","setState","defineProperty","handleSubmit","e","_this$state","passwordOne","signUp","then","authUser","cleanUserForSignUp","setItem","helper","loadEvents","included","history","push","catch","error","cleanUserForLogin","_this$state2","username","businessName","address","phoneNumber","contactName","foodType","food_type","contact_name","phone","website","account_type","toggleSignUp","newSignUp","fileChangedHandler","logo","files","uploadHandler","inherits","createClass","key","showFoodType","_this2","_this$state3","className","onSubmit","placeholder","onChange","htmlFor","NavLink","to","onClick","connect","PropTypes","object","func","dispatch","withRouter","SignUpPage","context","containers_Login","BusinessContainer","changeCurrentPage","handleClick","businesses","header","replace","toUpperCase","toLowerCase","ProfilePage","makeEvent","newState","createEventOpen","cleanPostParams","preventDefault","cleanDataForRequest","createPostBody","addEvent","eventDate","eventName","eventToChange","find","userEvent","editEvent","deleteEvent","eventToDelete","classList","removeEvent","eventBooked","_this$props","slice","keys","href","array","mockBreweries","mockFoodTrucks","NavBar","loadData","getAttribute","page","loadBreweries","loadFoodTrucks","loadMockData","displayStatus","profile","App","handleNavBar","navOpen","logOutUser","removeUser","match","src","truck","barrel","containers_NavBar","Route","exact","path","render","SignUpPage_SignUpPage","component","components_BusinessContainer_BusinessContainer","Boolean","window","location","hostname","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","provider","es","BrowserRouter","basename","process","Provider","containers_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53b31a9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hamburger.d9aaf7d5.svg\";","import { combineReducers } from \"redux\";\nimport { breweriesReducer } from \"./breweriesReducer\";\nimport { currentPageReducer } from \"./currentPageReducer\";\nimport { foodTrucksReducer } from \"./foodTrucksReducer\";\nimport { userEventsReducer } from \"./userEventsReducer\";\nimport { userReducer } from \"./userReducer\";\n\nexport const rootReducer = combineReducers({\n  breweries: breweriesReducer,\n  currentPage: currentPageReducer,\n  foodTrucks: foodTrucksReducer,\n  userEvents: userEventsReducer,\n  user: userReducer\n});\n","export const breweriesReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"LOAD_BREWERIES\":\n      return action.breweries;\n    default:\n      return state;\n  }\n};\n","export const currentPageReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"LOAD_PROFILE\":\n      return action.currentPage;\n    default:\n      return state;\n  }\n};\n","export const foodTrucksReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"LOAD_FOOD_TRUCKS\":\n      return action.foodTrucks;\n    default:\n      return state;\n  }\n};\n","export const userEventsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"LOAD_EVENTS\":\n      return action.events;\n    case \"ADD_EVENT\":\n      return [...state, action.event];\n    case \"REMOVE_EVENT\":\n      return state.filter(event => event.id !== action.event.id);\n    case \"EDIT_EVENT\":\n      return state.map(event => {\n        return event.id === action.event.id ? { ...action.event } : event;\n      });\n    default:\n      return state;\n  }\n};\n","export const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"ADD_USER\":\n      return action.user;\n    case \"REMOVE_USER\":\n      return {};\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from \"firebase/app\";\nimport \"firebase/auth\";\n// import { config } from \"../../utilities/config.js\";\n\n\nlet config = {\n  apiKey: \"AIzaSyAZaFvQvt60q0xHZ0LFxug4ooVX3LOiPMA\",\n  authDomain: \"trucktrackr-2f98a.firebaseapp.com\",\n  databaseURL: \"https://trucktrackr-2f98a.firebaseio.com\",\n  projectId: \"trucktrackr-2f98a\",\n  storageBucket: \"trucktrackr-2f98a.appspot.com\",\n  messagingSenderId: \"97220175359\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n  }\n\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n}\n\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from \"./context\";\nimport Firebase from \"./firebase\";\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","export const loadBreweries = breweries => ({\n  type: \"LOAD_BREWERIES\",\n  breweries\n});\n\nexport const loadFoodTrucks = foodTrucks => ({\n  type: \"LOAD_FOOD_TRUCKS\",\n  foodTrucks\n});\n\nexport const loadProfile = currentPage => ({\n  type: \"LOAD_PROFILE\",\n  currentPage\n});\n\nexport const addUser = user => ({\n  type: \"ADD_USER\",\n  user\n});\n\nexport const removeUser = () => ({\n  type: \"REMOVE_USER\"\n});\n\nexport const loadEvents = events => ({\n  type: \"LOAD_EVENTS\",\n  events\n});\n\nexport const addEvent = event => ({\n  type: \"ADD_EVENT\",\n  event\n});\n\nexport const removeEvent = event => ({\n  type: \"REMOVE_EVENT\",\n  event\n});\n\nexport const editEvent = event => ({\n  type: \"EDIT_EVENT\",\n  event\n});\n","export const fetchBusinesses = async businessType => {\n  try {\n    const response = await fetch(\n      `https://truck-trackr-api.herokuapp.com/api/v1/${businessType}`\n    );\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    } else {\n      const result = await response.json();\n      return result;\n    }\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const loginUser = async user => {\n  try {\n    const response = await fetch(\n      `https://truck-trackr-api.herokuapp.com/login`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }\n    );\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    } else {\n      const result = await response.json();\n      const eventResults = await getUserEvents(result);\n      let newResult = [result, eventResults]\n      return newResult\n    }\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getUserEvents = async (user) => {\n  const cleanedUser = await cleanUser(user);\n  try {\n    const response = await fetch(`https://truck-trackr-api.herokuapp.com/api/v1/${cleanedUser.type}/${cleanedUser.id}/${cleanedUser.eventType}`)\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    } else {\n      const result = await response.json();\n      return result;\n    } \n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const cleanUser = (user) => {\n  let cleanedUser;\n  if(user.data.type === 'brewery') {\n    cleanedUser = {\n      type: 'breweries',\n      eventType: 'brewery_events',\n      id: user.data.id\n    }\n  } else {\n    cleanedUser = {\n      type: 'food_trucks',\n      eventType: 'open_dates',\n      id: user.data.id\n    }\n  }\n  return cleanedUser\n}\n\nexport const createNewUser = async (user, locationType) => {\n  try {\n    const response = await fetch(\n      `https://truck-trackr-api.herokuapp.com/api/v1/${locationType}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }\n    );\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    } else {\n      return await response.json();\n    }\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const createEventFetch = async (user, postBody) => {\n  try {\n    const response = await fetch(\n      `https://truck-trackr-api.herokuapp.com/api/v1/${user.type}/${user.id}/${\n        user.eventType\n      }`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(postBody)\n      }\n    );\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    } else {\n      const result = await response;\n      return result\n    }\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const toggleEventStatus = async (business, event) => {\n  let cleanedBusiness = cleanUser(business)\n  let cleanedEvent = cleanEventForPut(event, business)\n  try {\n    const response = await fetch(`https://truck-trackr-api.herokuapp.com/api/v1/${cleanedBusiness.type}/${cleanedBusiness.id}/${cleanedBusiness.eventType}/${event.id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(cleanedEvent)\n      }\n    );\n\n    if(!response.ok) {\n      throw new Error(response.statusText)\n    } else {\n      const result = await response;\n      return result\n    }\n  } catch (error) {\n    throw new Error(error.message)\n  }\n}\n\n// export const cleanUserForPut = (user) => {\n//   let cleanedUser;\n//   if(user.data.type === 'brewery') {\n//     cleanedUser = {\n//       type: 'brewery',\n//       eventType: 'brewery_events',\n//       id: user.data.id\n//     }\n//   } else {\n//     cleanedUser = {\n//       type: 'food_truck',\n//       eventType: 'open_dates',\n//       id: user.data.id\n//     }\n//   }\n//   return cleanedUser\n// }\n\nexport const cleanEventForPut = (event, business) => {\n  let cleanedEvent;\n  \n  if(business.type === 'food_truck'){\n    cleanedEvent = {\n      date: event.attributes.date,\n      \"booked?\": event.attributes[\"booked?\"],\n      uid: sessionStorage.getItem('uid')\n    }\n  } else {\n    cleanedEvent = {\n      date: event.attributes.date,\n      \"truck_booked?\": event.attributes[\"truck_booked?\"],\n      uid: sessionStorage.getItem('uid')\n    }\n  }\n  return cleanedEvent\n}\n\nexport const deleteEventFetch = async (business, event) => {\n  const cleanedBusiness = cleanUser(business);\n  console.log('cleanedBusiness', cleanedBusiness)\n  console.log('event', event)\n  try {\n    const response = await fetch(`https://truck-trackr-api.herokuapp.com/api/v1/${cleanedBusiness.type}/${cleanedBusiness.id}/${cleanedBusiness.eventType}/${event.id}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          uid: sessionStorage.getItem('uid')\n        })\n      }\n    );\n\n    if(!response.ok) {\n      throw new Error(response.statusText)\n    } else {\n      const result = await response.json;\n      return result\n    }\n  } catch (error) {\n    throw new Error(error.message)\n  }\n\n}","import React, { Component } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./Login.css\";\nimport { addUser, loadProfile, loadEvents } from \"../../actions\";\nimport * as helper from \"../../utilities\";\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      passwordOne: \"\",\n      signUp: false,\n      locationType: \"\",\n      businessName: \"\",\n      address: \"\",\n      phoneNumber: \"\",\n      contactName: \"\",\n      foodType: \"\",\n      logo: null\n    };\n  }\n\n  handleKeyPress = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = async e => {\n    // e.preventDefault();\n    const { email, passwordOne, signUp, locationType } = this.state;\n\n\n    if (signUp) {\n      this.props.firebase\n        .doCreateUserWithEmailAndPassword(email, passwordOne)\n        .then(async authUser => {\n          let user = this.cleanUserForSignUp(authUser);\n          sessionStorage.setItem(\"uid\", authUser.user.uid);\n          let result = await helper.createNewUser(user, locationType);\n          this.props.addUser(result[0].data);\n          this.props.loadProfile(result[0]);\n          this.props.loadEvents(result[1].included)\n          this.props.history.push(\"/profile\");\n        })\n        .catch(error => {\n          this.setState({ error });\n        });\n    } else {\n      this.props.firebase\n        .doSignInWithEmailAndPassword(email, passwordOne)\n        .then(async authUser => {\n          sessionStorage.setItem(\"uid\", authUser.user.uid);\n          const user = this.cleanUserForLogin(authUser, locationType);\n          const result = await helper.loginUser(user);\n          console.log(result);\n          this.props.addUser(result[0].data);\n          this.props.loadProfile(result[0]);\n          this.props.loadEvents(result[1].included)\n          this.props.history.push(\"/profile\");\n        })\n        .catch(error => {\n          this.setState({ error });\n        });\n    }\n  };\n\n  cleanUserForSignUp = authUser => {\n    const {\n      username,\n      email,\n      passwordOne,\n      signUp,\n      locationType,\n      businessName,\n      address,\n      phoneNumber,\n      contactName,\n      foodType\n    } = this.state;\n    let user;\n    if (locationType === \"food_trucks\") {\n      user = {\n        name: businessName,\n        food_type: foodType,\n        contact_name: contactName,\n        phone: phoneNumber,\n        email,\n        website: username,\n        uid: authUser.user.uid\n      };\n    } else {\n      user = {\n        name: businessName,\n        address: address,\n        contact_name: contactName,\n        phone: phoneNumber,\n        email,\n        uid: authUser.user.uid\n      };\n    }\n    return user;\n  };\n\n  cleanUserForLogin = (authUser, locationType) => {\n    let user;\n    if (locationType === \"food_trucks\") {\n      user = {\n        uid: authUser.user.uid,\n        account_type: \"food_truck\"\n      };\n    } else {\n      user = {\n        uid: authUser.user.uid,\n        account_type: \"brewery\"\n      };\n    }\n    return user;\n  };\n\n  toggleSignUp = () => {\n    let newSignUp = !this.state.signUp;\n    this.setState({ signUp: newSignUp });\n  };\n\n  fileChangedHandler = event => {\n    this.setState({\n      logo: event.target.files[0]\n    });\n  };\n\n  uploadHandler = () => {\n    console.log(this.state.logo);\n\n    // const formData = new FormData()\n    // formData.append('myFile', this.state.logo, this.state.logo.name)\n    // axios.post('my-domain.com/file-upload', formData)\n  };\n\n  render() {\n    const { signUp, locationType } = this.state;\n    let showFoodType;\n\n    if (signUp && locationType === \"food_trucks\") {\n      showFoodType = true;\n    }\n\n    return (\n      <main className=\"login\">\n        <form className=\"login-form\" onSubmit={this.handleSubmit}>\n          <input\n            className=\"email-input\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={this.handleKeyPress}\n          />\n          <input\n            className=\"password-input\"\n            name=\"passwordOne\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={this.handleKeyPress}\n          />\n          <input\n            className={signUp ? \"business-name-input\" : \"hidden\"}\n            name=\"businessName\"\n            placeholder=\"Business Name\"\n            onChange={this.handleKeyPress}\n          />\n          <input\n            className={signUp ? \"address-input\" : \"hidden\"}\n            name=\"address\"\n            placeholder=\"Address/City Located\"\n            onChange={this.handleKeyPress}\n          />\n          <input\n            className={signUp ? \"phone-number-input\" : \"hidden\"}\n            name=\"phoneNumber\"\n            placeholder=\"Phone Number\"\n            onChange={this.handleKeyPress}\n          />\n          <input\n            className={signUp ? \"contact-name-input\" : \"hidden\"}\n            name=\"contactName\"\n            placeholder=\"Contact Name\"\n            onChange={this.handleKeyPress}\n          />\n          <input\n            className={showFoodType ? \"food-type-input\" : \"hidden\"}\n            name=\"foodType\"\n            placeholder=\"Food Type\"\n            onChange={this.handleKeyPress}\n          />\n          <p className={signUp ? \"business-type\" : \"hidden\"}>\n            What Type of Business:\n          </p>\n          <div className=\"button-holder\">\n            <input\n              className={\"food-truck-radio\"}\n              type=\"radio\"\n              name=\"locationType\"\n              value=\"food_trucks\"\n              id=\"food-truck-button\"\n              onChange={this.handleKeyPress}\n            />\n            <label className={\"food-truck-label\"} htmlFor=\"food-truck-button\">\n              Food Truck\n            </label>\n            <input\n              className={\"brewery-radio\"}\n              type=\"radio\"\n              name=\"locationType\"\n              value=\"breweries\"\n              id=\"brewery-button\"\n              onChange={this.handleKeyPress}\n            />\n            <label className={\"brewery-label\"} htmlFor=\"brewery-button\">\n              Brewery\n            </label>\n          </div>\n          {/* <input\n            className={signUp ? \"logo-input\" : \"hidden\"}\n            name=\"logo\"\n            placeholder=\"Upload logo\"\n            onChange={this.handleKeyPress}\n            type=\"file\"\n          />\n          <button\n            className={signUp ? \"logo-button\" : \"hidden\"}\n            onClick={this.uploadHandler}\n          >\n            Upload!\n          </button> */}\n          <NavLink\n            to=\"/profile\"\n            className=\"signin-button\"\n            onClick={e => this.handleSubmit(e)}\n          >\n            {signUp ? \"Sign Up\" : \"Sign In\"}\n          </NavLink>\n        </form>\n        <button className=\"signup-button\" onClick={this.toggleSignUp}>\n          {signUp\n            ? \"Actually I already have an account\"\n            : \"First Time Here? Sign Up!\"}\n        </button>\n      </main>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  user: state.user\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  addUser: user => dispatch(addUser(user)),\n  loadProfile: currentPage => dispatch(loadProfile(currentPage)),\n  loadEvents: events => dispatch(loadEvents(events)) \n});\n\nconst { object, func } = PropTypes;\n\nLogin.propTypes = {\n  user: object,\n  addUser: func\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Login));\n","import React, { Component } from \"react\";\nimport { FirebaseContext, withFirebase } from \"../Firebase\";\nimport Login from \"../../containers/Login\";\nimport { withRouter } from \"react-router-dom\";\n\nexport const SignUpPage = props => (\n  <div>\n    <FirebaseContext.Consumer>\n      {firebase => <Login firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  </div>\n);\n\nexport default withRouter(withFirebase(SignUpPage));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { changeCurrentPage } from \"../../actions\";\nimport \"./BusinessContainer.css\";\nimport { withRouter } from \"react-router-dom\";\n\nexport const BusinessContainer = props => {\n  const { data, changeCurrentPage, currentPage, loadProfile } = props;\n\n  const handleClick = async e => {\n    try {\n      const response = await fetch(\n        `https://truck-trackr-api.herokuapp.com/api/v1/${currentPage}/${\n          e.target.id\n        }`\n      );\n      const result = await response.json();\n      await loadProfile(result);\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  };\n\n  const businesses = data.map(business => {\n    return (\n      <NavLink\n        to={`/business/${business.attributes.name}`}\n        key={business.id}\n        id={business.id}\n        onClick={handleClick}\n        className='business-button'\n      >\n        {business.attributes.name}\n      </NavLink>\n    );\n  });\n\n  const header = currentPage.replace('_', ' ').toUpperCase()\n  const lowerCaseBiz = header.toLowerCase();\n\n  return (\n    <div className=\"business-holder\">\n      <h3 className='business-header'>{`${header}`}</h3>\n      {businesses}\n    </div>\n  );\n};\n\nexport default withRouter(BusinessContainer);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport \"./ProfilePage.css\";\nimport SignUpPage from \"../../components/SignUpPage\";\nimport { addUser, editEvent, removeEvent, addEvent } from \"../../actions\";\nimport { createEventFetch } from \"../../utilities\";\nimport * as helper from \"../../utilities\";\n\nexport class ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      createEventOpen: false,\n      eventDate: \"\",\n      eventBooked: false\n    };\n  }\n\n  componentDidMount() {\n    // if(!Object.keys(this.props.currentPage).length){\n    //     this.props.history.push('/')\n    // }\n  }\n\n  makeEvent = () => {\n    let newState = !this.state.createEventOpen;\n    this.setState({ createEventOpen: newState });\n  };\n\n  handleKeyPress = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    let cleanUser = this.cleanDataForRequest();\n    let cleanPostParams = this.createPostBody();\n    let result = await createEventFetch(cleanUser, cleanPostParams);\n    if(this.props.user.type === 'food_truck'){\n        this.props.addEvent({\n        id: this.state.eventDate,\n        attributes: {\n            id: this.state.eventDate,\n            date: this.state.eventDate,\n            'booked?': false  \n            }\n        })\n    } else {\n        this.props.addEvent({\n            id: this.state.eventDate,\n            attributes: {\n                id: this.state.eventDate,\n                date: this.state.eventDate,\n                'truck_booked?': false  \n                }\n            })\n    }\n    this.setState({\n      createEventOpen: false,\n      eventName: \"\",\n      eventDate: \"\"\n    });\n  };\n\n  cleanDataForRequest = () => {\n    const { user } = this.props;\n    let type;\n    let eventType;\n    if (user.type === \"food_truck\") {\n      type = \"food_trucks\";\n      eventType = \"open_dates\";\n    } else {\n      type = \"breweries\";\n      eventType = \"brewery_events\";\n    }\n\n    let cleanUser = {\n      type,\n      id: user.id,\n      eventType\n    };\n    return cleanUser;\n  };\n\n  createPostBody = () => {\n    const uid = sessionStorage.getItem(\"uid\");\n    const { eventDate } = this.state;\n\n    return {\n      uid,\n      date: eventDate\n    };\n  };\n\n  toggleEventStatus = async e => {\n    let eventToChange = this.props.userEvents.find(\n      userEvent => userEvent.id === e.target.id\n    );\n    if (this.props.user.type === \"brewery\") {\n      eventToChange.attributes[\"truck_booked?\"] = !eventToChange.attributes[\n        \"truck_booked?\"\n      ];\n      await helper.toggleEventStatus(this.props.currentPage, eventToChange);\n      this.props.editEvent(eventToChange);\n    } else {\n      eventToChange.attributes[\"booked?\"] = !eventToChange.attributes[\n        \"booked?\"\n      ];\n      await helper.toggleEventStatus(this.props.currentPage, eventToChange);\n      this.props.editEvent(eventToChange);\n    }\n  };\n\n  deleteEvent = async e => {\n    console.log('id', e.target.classList[0])\n    let eventToDelete = this.props.userEvents.find(\n      userEvent => userEvent.id === e.target.classList[0]\n    );\n    await helper.deleteEventFetch(this.props.currentPage, eventToDelete);\n    this.props.removeEvent(eventToDelete);\n  };\n\n  render() {\n    const { currentPage, user, userEvents } = this.props;\n    let events;\n\n    if (userEvents.length && currentPage.data === user) {\n      if (user.type === \"brewery\") {\n        events = userEvents.map(event => (\n          <h4\n            className={\n              event.attributes[\"truck_booked?\"]\n                ? \"upcoming-events-date booked\"\n                : \"upcoming-events-date open\"\n            }\n            key={event.attributes.date}\n          >\n          <span>\n            {event.attributes.date.slice(5)}\n            <span className=\"upcoming-events-status\">\n              {event.attributes[\"truck_booked?\"] ? \"Booked\" : \"Open\"}\n            </span>\n          </span>\n          <span>\n            <button className='change-status-button' id={event.attributes.id} onClick={this.toggleEventStatus}>\n              Change Status\n            </button>\n            <button className={`${event.attributes.id} delete-status-button`} onClick={this.deleteEvent}>\n              Delete Event\n            </button>\n          </span>\n          </h4>\n        ));\n      } else {\n        events = userEvents.map(event => (\n          <h4\n            className={\n              event.attributes[\"booked?\"]\n                ? \"upcoming-events-date booked\"\n                : \"upcoming-events-date open\"\n            }\n            key={event.attributes.id}\n          >\n            {event.attributes.date.slice(5)}\n            <span className=\"upcoming-events-status\">\n              {event.attributes[\"booked?\"] ? \"Booked\" : \"Open\"}\n            </span>\n            <button className='change-status-button' id={event.attributes.id} onClick={this.toggleEventStatus}>\n              Change Status\n            </button>\n            <button className={`delete-status-button ${event.attributes.id}`} onClick={this.deleteEvent}>\n              Delete Event\n            </button>\n          </h4>\n        ));\n      }\n    } else if (userEvents.length && currentPage.data !== user) {\n      if (user.type === \"brewery\") {\n        events = currentPage.included.map(event => (\n          <h4\n            className={\n              event.attributes[\"truck_booked?\"]\n                ? \"upcoming-events-date booked\"\n                : \"upcoming-events-date open\"\n            }\n            key={event.attributes.id}\n          >\n            {event.attributes.date.slice(5)}\n            <span className=\"upcoming-events-status\">\n              {event.attributes[\"truck_booked?\"] ? \"Booked\" : \"Open\"}\n            </span>\n          </h4>\n        ));\n      } else {\n        events = currentPage.included.map(event => (\n          <h4\n            className={\n              event.attributes[\"booked?\"]\n                ? \"upcoming-events-date booked\"\n                : \"upcoming-events-date open\"\n            }\n            key={event.attributes.id}\n          >\n            {event.attributes.date.slice(5)}\n            <span className=\"upcoming-events-status\">\n              {event.attributes[\"booked?\"] ? \"Booked\" : \"Open\"}\n            </span>\n          </h4>\n        ));\n      }\n    }\n\n    if (Object.keys(currentPage).length) {\n      const { attributes } = currentPage.data;\n      return (\n        <div className=\"parent-container\">\n          <div className=\"profile-container\">\n            <div className=\"biz-container\">\n              <h2 className=\"biz-name\">{attributes.name}</h2>\n              <h5\n                className={\n                  currentPage.data.type === \"food_truck\"\n                    ? \"biz-title\"\n                    : \"hidden\"\n                }\n              >\n                Food Type:\n              </h5>\n              <h5\n                className={\n                  currentPage.data.type === \"food_truck\" ? \"biz-info\" : \"hidden\"\n                }\n              >\n                {attributes.food_type || null}\n              </h5>\n\n              <h5 className=\"biz-title\">Phone Number:</h5>\n              <h5 className=\"biz-info\">{attributes.phone}</h5>\n\n              <h5 className=\"biz-title\">Contact Name:</h5>\n              <h5 className=\"biz-info\">{attributes.contact_name}</h5>\n\n              <h5 className=\"biz-title\">Email:</h5>\n              <h5 className=\"biz-info\">{attributes.email}</h5>\n\n              <h5 className=\"biz-title\">Website:</h5>\n              <a href={attributes.website} target=\"blank\" className=\"biz-info\">\n                {attributes.website}\n              </a>\n            </div>\n            <button\n              onClick={this.makeEvent}\n              className={\n                currentPage.data === user ? \"create-event-button\" : \"hidden\"\n              }\n            >\n              Create Event\n            </button>\n            <div className=\"upcoming-events-container\">\n              <h3 className=\"upcoming-events-title\">UPCOMING EVENTS</h3>\n              {events}\n            </div>\n            <form\n              className={\n                this.state.createEventOpen ? \"create-event-form\" : \"hidden\"\n              }\n            >\n              <h6 className='create-event-date'>Event date:</h6>\n              <span>\n                <input\n                  className=\"create-event-input\"\n                  id=\"event-date\"\n                  name=\"eventDate\"\n                  value={this.state.eventDate}\n                  placeholder=\"(yy-mm-dd)\"\n                  onChange={this.handleKeyPress}\n                />\n              </span>\n              <button\n                onClick={this.handleSubmit}\n                className=\"create-event-form-button\"\n              >\n                Create\n              </button>\n            </form>\n          </div>\n        </div>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nexport const mapStateToProps = state => ({\n  currentPage: state.currentPage,\n  user: state.user,\n  userEvents: state.userEvents\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  addUser: user => dispatch(addUser(user)),\n  editEvent: userEvent => dispatch(editEvent(userEvent)),\n  removeEvent: userEvent => dispatch(removeEvent(userEvent)),\n  addEvent: userEvent => dispatch(addEvent(userEvent))\n});\n\nconst { object, func, array } = PropTypes;\n\nProfilePage.propTypes = {\n  user: object,\n  currentPage: object,\n  userEvents: array,\n  addUser: func,\n  editEvent: func,\n  removeEvent: func\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProfilePage);\n","export const mockBreweries = {\n  data: [\n    {\n      id: \"1\",\n      type: \"brewery\",\n      attributes: {\n        name: \"Lockman Inc\"\n      }\n    },\n    {\n      id: \"2\",\n      type: \"brewery\",\n      attributes: {\n        name: \"Cremin, Nikolaus and Volkman\"\n      }\n    }\n  ]\n};\n\nexport const mockBrewery = {\n  data: [\n    {\n      id: \"1\",\n      type: \"brewery\",\n      attributes: {\n        name: \"Heads Of State\",\n        address: \"Risotto with Seafood\",\n        contact_name: \"Pamala\",\n        phone: \"344.694.9247\",\n        email: \"young@champlin.biz\",\n        website: \"http://hosbeer.com\",\n        logo_image:\n          \"https://pigment.github.io/fake-logos/logos/medium/color/11.png\"\n      }\n    }\n  ]\n};\n\nexport const mockFoodTrucks = [\n  {\n    data: [\n      {\n        id: \"1\",\n        type: \"food_truck\",\n        attributes: {\n          name: \"Hot Pasta\"\n        }\n      },\n      {\n        id: \"2\",\n        type: \"food_truck\",\n        attributes: {\n          name: \"Hell On Wheels\"\n        }\n      }\n    ]\n  }\n];\n\nexport const mockFoodTruck = {\n  data: [\n    {\n      id: \"1\",\n      type: \"food_truck\",\n      attributes: {\n        name: \"Hot Pasta\",\n        food_type: \"Risotto with Seafood\",\n        contact_name: \"Pamala\",\n        phone: \"344.694.9247\",\n        email: \"young@champlin.biz\",\n        website: \"http://hopo.com\",\n        logo_image:\n          \"https://pigment.github.io/fake-logos/logos/medium/color/11.png\"\n      }\n    }\n  ]\n};\n\nexport const mockProfile = {\n  data: \n    {\n      id: \"1\",\n      type: \"brewery\",\n      attributes: {\n        name: \"Heads Of State\",\n        address: \"Risotto with Seafood\",\n        contact_name: \"Pamala\",\n        phone: \"344.694.9247\",\n        email: \"young@champlin.biz\",\n        website: \"http://hosbeer.com\",\n        logo_image:\n          \"https://pigment.github.io/fake-logos/logos/medium/color/11.png\"\n      }\n    },\n    included: [\n      {\n        id: 433,\n        date: \"04/03/2018\",\n        attributes: {\n          'truck_booked?': true,\n          date: \"04/03/2018\"},\n        brewery_id: 105\n      },\n      {\n        id: 434,\n        date: \"04/08/2018\",\n        attributes: {\n          'truck_booked?': false,\n          date: \"04/08/2018\"},\n        brewery_id: 105\n      }\n    ]\n};\n\nexport const mockUser = {\n  id: \"1\",\n  type: \"brewery\",\n  attributes: {\n    name: \"Heads Of State\",\n    address: \"Risotto with Seafood\",\n    contact_name: \"Pamala\",\n    phone: \"344.694.9247\",\n    email: \"young@champlin.biz\",\n    website: \"http://hosbeer.com\",\n    logo_image: \"https://pigment.github.io/fake-logos/logos/medium/color/11.png\"\n  }\n};\n\nexport const mockEvent = {\n  id: 435,\n  date: \"04/06/2018\",\n  truck_booked: true,\n  brewery_id: 105\n};\n\nexport const mockUserEvents = [\n  {\n    id: 433,\n    date: \"04/03/2018\",\n    truck_booked: true,\n    brewery_id: 105\n  },\n  {\n    id: 434,\n    date: \"04/08/2018\",\n    truck_booked: false,\n    brewery_id: 105\n  }\n];\n\nexport const mockUpdatedEvents = [\n  {\n    id: 433,\n    date: \"04/03/2018\",\n    truck_booked: true,\n    brewery_id: 105\n  },\n  {\n    id: 434,\n    date: \"04/08/2018\",\n    truck_booked: false,\n    brewery_id: 105\n  },\n  {\n    id: 435,\n    date: \"04/06/2018\",\n    truck_booked: true,\n    brewery_id: 105\n  }\n];\n\nexport const mockEventToEdit = {\n  id: 434,\n  date: \"04/03/2018\",\n  truck_booked: true,\n  brewery_id: 105\n};\n\nexport const mockEditedEvents = [\n  {\n    id: 433,\n    date: \"04/03/2018\",\n    truck_booked: true,\n    brewery_id: 105\n  },\n  {\n    id: 434,\n    date: \"04/03/2018\",\n    truck_booked: true,\n    brewery_id: 105\n  }\n];\n\nexport const mockLoginUser = {\n  uid: 55,\n  account_type: \"brewery\"\n};\n\nexport const mockPostParams = [\n  \"https://truck-trackr-api.herokuapp.com/login\",\n  {\n    method: \"POST\",\n    body: JSON.stringify(mockLoginUser),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }\n];\n\nexport const mockCreateUser = {\n  name: \"Test Brewery\",\n  address: \"Test Address\",\n  contact_name: \"Test Name\",\n  phone: \"Test Phone Number\",\n  email: \"Test Email\",\n  uid: \"123456789\"\n};\n\nexport const mockCreateUserParams = [\n  `https://truck-trackr-api.herokuapp.com/api/v1/breweries`,\n  {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(mockCreateUser)\n  }\n];\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { loadFoodTrucks, loadBreweries, loadProfile } from \"../../actions\";\nimport { mockFoodTrucks, mockBreweries } from \"../../tests/testMocks\";\nimport * as helper from \"../../utilities\";\nimport \"./NavBar.css\";\n\nexport class NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  loadData = async event => {\n    const businessType = event.target.getAttribute(\"name\");\n\n    const result = await helper.fetchBusinesses(businessType);\n    if (businessType === \"breweries\") {\n      this.props.loadProfile({ page: \"breweries\" });\n      this.props.loadBreweries(result.data);\n    } else {\n      this.props.loadProfile({ page: \"food_trucks\" });\n      this.props.loadFoodTrucks(result.data);\n    }\n  };\n\n  loadMockData = event => {\n    const businessType = event.target.getAttribute(\"name\");\n\n    if (businessType === \"breweries\") {\n      this.props.loadBreweries(mockBreweries);\n    } else if (businessType === \"food_trucks\") {\n      this.props.loadFoodTrucks(mockFoodTrucks);\n    }\n  };\n\n  render() {\n    return (\n      <nav className={this.props.displayStatus ? \"display\" : \"hidden-nav\"}>\n        <ul className=\"nav-controls\">\n          <NavLink\n            to=\"/profile\"\n            onClick={() => this.props.loadProfile(this.props.user)}\n            className=\"nav-control my-profile\"\n            className={\n              this.props.displayStatus ? \"nav-control my-profile\" : \"hidden\"\n            }\n          >\n            My Profile\n          </NavLink>\n          <NavLink\n            to=\"/breweries\"\n            onClick={e => this.loadData(e)}\n            name=\"breweries\"\n            className={\n              this.props.displayStatus ? \"nav-control breweries\" : \"hidden\"\n            }\n          >\n            Breweries\n          </NavLink>\n          <NavLink\n            to=\"/food_trucks\"\n            onClick={e => this.loadData(e)}\n            name=\"food_trucks\"\n            className={\n              this.props.displayStatus ? \"nav-control food-trucks\" : \"hidden\"\n            }\n          >\n            Food Trucks\n          </NavLink>\n          <input\n            className={\n              this.props.displayStatus ? \"nav-control search-input\" : \"hidden\"\n            }\n            placeholder=\"Search\"\n          />\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  user: state.user\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  loadBreweries: breweries => dispatch(loadBreweries(breweries)),\n  loadFoodTrucks: foodTrucks => dispatch(loadFoodTrucks(foodTrucks)),\n  loadProfile: profile => dispatch(loadProfile(profile))\n});\n\nconst { func } = PropTypes;\n\nNavBar.propTypes = {\n  loadBreweries: func,\n  loadFoodTrucks: func,\n  loadProfile: func\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavBar);\n","import React, { Component } from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { SignUpPage } from \"../../components/SignUpPage\";\nimport { BusinessContainer } from \"../../components/BusinessContainer\";\nimport \"./App.css\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport ProfilePage from \"../ProfilePage\";\nimport NavBar from \"../NavBar\";\nimport truck from \"../../assets/food-truck.png\";\nimport barrel from \"../../assets/barrel-icon-new.png\";\nimport { withFirebase } from \"../../components/Firebase\";\nimport { loadProfile, addUser, removeUser } from \"../../actions\";\n\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      navOpen: false\n    };\n  }\n\n  componentDidMount() {\n    if (!Object.keys(this.props.user).length) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  handleNavBar = e => {\n    // document.querySelector(\".hamburger-trigger\").classList.toggle(\"active\");\n    this.setState({ navOpen: !this.state.navOpen });\n  };\n\n  handleNavBar = () => {\n    this.setState({ navOpen: !this.state.navOpen });\n  };\n\n  handleNavBar = () => {\n    this.setState({ navOpen: !this.state.navOpen });\n  };\n\n  logOutUser = () => {\n    this.props.removeUser();\n    sessionStorage.setItem('uid', '')\n    this.setState({navOpen: false})\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { navOpen } = this.state;\n    const { match, user } = this.props;\n\n    return (\n      <div className=\"main\">\n        <header>\n          <h1 className=\"main-title\">\n            <span>\n              <img src={truck} className=\"truck-icon\" />\n            </span>\n            TruckTrackr\n            <span>\n              <img src={barrel} className=\"barrel-icon\" />\n            </span>\n          </h1>\n          <section\n            className={Object.keys(user).length ? \"hamburger-holder\" : \"hidden\"}\n          >\n            <a\n              onClick={this.handleNavBar}\n              className={`hamburger-trigger ${this.state.navOpen}`}\n              id=\"hamburger\"\n            >\n              <span />\n              <span />\n              <span />\n            </a>\n          </section>\n          <button\n            onClick={this.logOutUser}\n            className={\n              Object.keys(this.props.user).length ? \"logout-button\" : \"hidden\"\n            }\n          >\n            Log Out\n          </button>\n        </header>\n        <div className=\"content-holder\">\n          <NavBar\n            displayStatus={this.state.navOpen}\n            history={this.props.history}\n          />\n\n          <Route\n            exact\n            path=\"/\"\n            render={props => <SignUpPage history={this.props.history} />}\n          />\n          <Route exact path=\"/profile\" component={ProfilePage} />\n          <Route\n            exact\n            path=\"/breweries\"\n            render={props => (\n              <BusinessContainer\n                data={this.props.breweries}\n                changeCurrentPage={this.props.changeCurrentPage}\n                currentPage={this.props.currentPage.page}\n                loadProfile={this.props.loadProfile}\n                history={this.props.history}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/food_trucks\"\n            render={props => (\n              <BusinessContainer\n                data={this.props.foodTrucks}\n                changeCurrentPage={this.props.changeCurrentPage}\n                currentPage={this.props.currentPage.page}\n                loadProfile={this.props.loadProfile}\n                history={this.props.history}\n              />\n            )}\n          />\n          <Route path=\"/business/:businessName\" component={ProfilePage} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  breweries: state.breweries,\n  foodTrucks: state.foodTrucks,\n  currentPage: state.currentPage,\n  user: state.user\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  loadProfile: profile => dispatch(loadProfile(profile)),\n  addUser: user => dispatch(addUser(user)),\n  removeUser: () => dispatch(removeUser())\n});\n\nconst { object, func, array } = PropTypes;\n\nApp.propTypes = {\n  breweries: array,\n  foodTrucks: array,\n  currentPage: object,\n  loadProfile: func\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(withFirebase(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { rootReducer } from './reducers'\n\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst store = createStore(rootReducer, devTools);\n\n\nconst provider = (\n  <Provider store = {store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n      <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n      </FirebaseContext.Provider>\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(provider, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/food-truck.28e4e20f.png\";","module.exports = __webpack_public_path__ + \"static/media/barrel-icon-new.976a538b.png\";"],"sourceRoot":""}